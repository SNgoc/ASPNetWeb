
Dùng trong identity và mail:
cài aspnetcore.identity.frameworkcore và identity.ui, Microsoft.VisualStudio.Web.CodeGeneration.Design
MailKit, MimeKit, Microsoft.AspNetCore.Diagnostics.Frameworkcore


khai báo trước chuỗi nảy trong appsetting.json:
{
  "ConnectionStrings": {
    "T12008M0Connection": "Server=.;Database=T12008M0;User=sa;Password=1"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "AllowedHosts": "*"
}

CHẠY lệnh trong package manager console:
Add-Migration InitialSetup    (sinh ra folder miration)
Update-Database		(tạo ra table trong db)	

CHẠY Scaffold item: click phải vào solution->add->new scafold item->identity->chọn hết->chọn IdentityDbcontext->add
=> tạo folder Areas là success

//thiết lập thông tin kết nối db
            services.AddDbContext<AppDBContext>(options =>
            {
                //đọc chuỗi kết nối từ tập tin cấu hình appsetting.json
                string conStr = Configuration.GetConnectionString("DemoIdentityConnection");
                options.UseSqlServer(conStr);
            });

xác thực thông tin
// Truy cập IdentityOptions
            services.Configure<IdentityOptions>(options => {
                // Thiết lập về Password
                options.Password.RequireDigit = false; // Không bắt phải có số
                options.Password.RequireLowercase = false; // Không bắt phải có chữ thường
                options.Password.RequireNonAlphanumeric = false; // Không bắt ký tự đặc biệt
                options.Password.RequireUppercase = false; // Không bắt buộc chữ in
                options.Password.RequiredLength = 3; // Số ký tự tối thiểu của password
                options.Password.RequiredUniqueChars = 1; // Số ký tự riêng biệt

                // Cấu hình Lockout - khóa user
                options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5); // Khóa 5 phút
                options.Lockout.MaxFailedAccessAttempts = 5; // Thất bại 5 lầ thì khóa
                options.Lockout.AllowedForNewUsers = true;

                // Cấu hình về User.
                options.User.AllowedUserNameCharacters = // các ký tự đặt tên user
                    "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+";
                options.User.RequireUniqueEmail = true; // Email là duy nhất

                // Cấu hình đăng nhập.
                options.SignIn.RequireConfirmedEmail = true; // Cấu hình xác thực địa chỉ email (email phải tồn tại)
                options.SignIn.RequireConfirmedPhoneNumber = false; // Xác thực số điện thoại

            });
TẠO MAIL:
	// Cấu hình Cookie
            services.ConfigureApplicationCookie(options => {
                // options.Cookie.HttpOnly = true;  
                options.ExpireTimeSpan = TimeSpan.FromMinutes(30);
                options.LoginPath = $"/login/";                                 // Url đến trang đăng nhập
                options.LogoutPath = $"/logout/";
                options.AccessDeniedPath = $"/Identity/Account/AccessDenied";   // Trang khi User bị cấm truy cập
            });
            services.Configure<SecurityStampValidatorOptions>(options =>
            {
                // Trên 5 giây truy cập lại sẽ nạp lại thông tin User (Role)
                // SecurityStamp trong bảng User đổi -> nạp lại thông tin Security
                options.ValidationInterval = TimeSpan.FromSeconds(5);
            });

            services.AddOptions();
            var mailsettings = Configuration.GetSection("MailSettings");  // đọc config
            services.Configure<MailSettings>(mailsettings);               // đăng ký để Inject

            services.AddTransient<IEmailSender, SendMailService>();        // Đăng ký dịch vụ Mail


PHÂN ROLE:
	    app.UseAuthentication(); //đăng nhập

            app.UseAuthorization(); //phân quyền

            app.UseEndpoints(endpoints =>
            {
                //đăng ký route cho Area-Identity
                endpoints.MapControllerRoute(
                    name: "IdentityArea", pattern: "{area:exits}/{controller=Home}/{action=Index}/{id}");

                endpoints.MapControllerRoute(
                    name: "default",
                    pattern: "{controller=Home}/{action=Index}/{id?}");

                //for razo rpage
                endpoints.MapRazorPages();
            });

ADD NUGET 
Newstonoft.json (bắt buộc phải có cho pj sau này)

TẠO TABLE CHO DB BẰNG CODE

Add-Migration AddProduct
Update-Database